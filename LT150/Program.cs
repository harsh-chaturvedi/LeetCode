// See https://aka.ms/new-console-template for more information
using LT150;

// RemoveDuplicateSortedArray2.RemoveDuplicates(new int[]{0,0,1,1,1,1,2,3,3});
// RemoveDuplicateSortedArray2.RemoveDuplicates(new int[]{1,1,1,1,2,2,3});
// StockBuySell1.MaxProfit(new int[] {2,1,2,1,0,1,2});
// Console.WriteLine("Hello, World!");
// JumpGame.CanJump(new int[] { 2, 3, 1, 1, 4 });
// JumpGame.CanJump(new int[] { 3,2,1,0,4 });
// JumpGame.CanJump(new int[] { 2,0,0 });
// JumpGame2.Jump(new int[]{2,3,1,1,4});
// JumpGame2.Jump(new int[]{1,1,1,1});
// JumpGame2.Jump(new int[]{1,2});
// JumpGame2.Jump(new int[] { 3, 2, 1 });
// GasStation.CanCompleteCircuit(new int[] { 2, 3, 4 }, new int[] { 3, 4, 3 });
// GasStation.CanCompleteCircuit(new int[] { 1, 2, 3, 4, 5 }, new int[] { 3, 4, 5, 1, 2 });
// GasStation.CanCompleteCircuit(new int[] { 5, 1, 2, 3, 4 }, new int[] { 4, 4, 1, 5, 1 });
// GasStation.CanCompleteCircuit(new int[] { 2, 0, 3 }, new int[] { 1, 2, 2 });
// RomanToInt.Convert("DCXXI");
// IndexOccurrenceString.StrStr("mississippi", "pi");
// IndexOccurrenceString.StrStr("mississippi", "sipp");
// IndexOccurrenceString.StrStr("hello", "ll");
// Console.WriteLine(ValidPalindrome.IsPalindrome("0P"));
// Console.WriteLine(ValidPalindrome.IsPalindrome("1b1"));
// ContainerWater.MaxArea(new int[] {2,3,4,5,18,17,6});
// Three3Sums.ThreeSum(new int[] { -1, 0, 1, 2, -1, -4 });
// MinimizeSizeSubArraySum.MinSubArrayLen(7, new int[] { 2, 3, 1, 2, 4, 3 });
// LongestSubstringWithoutRepeatingCharacters.LengthOfLongestSubstring("pwwkew");
// LongestSubstringWithoutRepeatingCharacters.LengthOfLongestSubstring(" ");
// LongestSubstringWithoutRepeatingCharacters.LengthOfLongestSubstring("abba");
// IsIsomorphicStrings.IsIsomorphic("abab", "baba");
// LongestCommonSequence.LongestConsecutive(new int[] {100,4,200,1,3,2});
// SpiralMatrix.SpiralOrder(new int[][] { new int[] { 1, 2, 3, 4 }, new int[] { 5, 6, 7, 8 }, new int[] { 9, 10, 11, 12 } });
// GameofLife.Play(new int[][] { new int[] { 0, 1, 0 }, new int[] { 0, 0, 1 }, new int[] { 1, 1, 1 }, new int[] { 0, 0, 0 } });
// GameofLife.Play(new int[][] { new int[] { 1 } });
SummaryRanges.Solve(new int[] { 0, 2, 3, 4, 6, 8, 9 });
// SummaryRanges.Solve(new int[] { 0,1,2,4,5,7 });
// SummaryRanges.Solve(new int[] { 0,1,3,4,5,6 });